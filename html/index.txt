<head>
<title>Gaussian Processes - MATLAB Software</title>
</head>

<body><div class="section">

<h1>Gaussian Process Software</h1>

<p>This page describes examples of how to use the Gaussian Process  Software (GP).

<p>Additional GP related software from this site:

<p>The GP-LVM C++ software is available from <a href="http://www.cs.man.ac.uk/~neill/gplvmcpp/">here</a>.

<p>The IVM C++ software is available from <a href="http://www.cs.man.ac.uk/~neill/ivmcpp/">here</a>.

<p>The MATLAB IVM toolbox is available here <a href="http://www.cs.man.ac.uk/~neill/ivm/">here</a>.

<p>The original MATLAB GP-LVM toolbox is available here <a href="http://www.cs.man.ac.uk/~neill/gplvm/">here</a>.

RELEASEINFORMATION

Various minor changes for enabling back constraints in hierarchical GP-LVM models.

<p>Finally you will also need the <a href="http://www.ncrg.aston.ac.uk/netlab/">NETLAB toolbox</a>.

<h3>Old Versions</h3>

<p>Release 0.1 splits away the Gaussian process section of the FGPLVM toolbox into this separate toolbox.


<h2>Examples</h2>


<h3>Sparse Pseudo-input Gaussian Processes</h3>

<p>The sparse approximation used in this toolbox is based on the Sparse Pseudo-input Gaussian Process model described by  <a href="http://ext.dcs.shef.ac.uk/~u0015/cgi-bin/bibpage.cgi?keyName=Snelson:pseudo05&printAbstract=1">Snelson and Ghahramani</a>. Also provided are the extensions suggested by <a href="http://ext.dcs.shef.ac.uk/~u0015/cgi-bin/bibpage.cgi?keyName=Quinonero:unifying05">Quinonero-Candela and Rasmussen</a>. They provide a unifying terminology for describing these approximations which we shall use in what follows.

<p>There are three demos provided for Gaussian process regression in 1-D. They each use a different form of likelihood approximation. The first demonstration uses the `projected latent variable' approach first described by <a href="http://ext.dcs.shef.ac.uk/~u0015/cgi-bin/bibpage.cgi?keyName=Csato:sparse02&printAbstract=1">Csato and Opper</a> and later used by <a href="http://ext.dcs.shef.ac.uk/~u0015/cgi-bin/bibpage.cgi?keyName=Seeger:fast03&printAbstract=1">Seeger <i>et al.</i></a>. In the terminology of Quinonero-Candela and Rasmussen (QR-terminology) this is known as the `deterministic training conditional' (DTC) approximation.

<p>To use this approximation the following script can be run.
<p><code>
&gt;&gt; demSpgp1d1
</code>
<p>The result of the script is given in the plot below.
<p><center><img src="demSpgp1d1.png" width ="50%"><br>
Gaussian process using the DTC approximation with nine inducing variables. Data is shown as red spots, posterior mean prediction is shown as a blue line and two standard deviations are given as dashed blue lines.</center>

<p>The improved approximation suggested by Snelson and Ghahramani, in QR-terminology this is known as the fully independent training conditional (FITC). To try this approximation run the following script
<p><code>
&gt;&gt; demSpgp1d2
</code>
<p>The result of the script is given on the left of the plot below.
<p><center><img src="demSpgp1d2.png" width="49%"><img src="demSpgp1d3.png" width="49%"><br>
<i>Left</i>: Gaussian process using the FITC approximation with nine inducing variables. Data is shown as red spots, posterior mean prediction is shown as a blue line and two standard deviations are given as dashed blue lines. <i>Right</i>: Similar but for the PITC approximation, again with nine inducing variables.</center>

<p>At the <a href="http://www.dcs.shef.ac.uk/ml/gprt/">Sheffield Gaussian Process Round Table</a> Lehel Csato pointed out that the Bayesian Committee Machine of <a href="http://ext.dcs.shef.ac.uk/~u0015/cgi-bin/bibpage.cgi?group=bcm&printAbstract=1">Schwaighofer and Tresp</a> can also be viewed within the same framework. This idea is formalised in <a href="http://ext.dcs.shef.ac.uk/~u0015/cgi-bin/bibpage.cgi?keyName=Quinonero:unifying05&printAbstract=1">Qunionenro-Candela and Rasmussen's</a> review. This approximation is known as the `partially independent training conditional' (PITC) in QR-terminology. To try this approximation run the following script
<p><code>
&gt;&gt; demSpgp1d3
</code>
<p>The result of the script is given on the right of the plot above.

<p>Finally we can compare these results to the result from the full Gaussian process on the data with the correct hyper-parameters. To do this the following script can be run.
<p><code>
&gt;&gt; demSpgp1d4
</code>
<p>The result of the script is given in the plot below.
<p><center><img src="demSpgp1d4.png" width="50%"><br>
Full Gaussian process on the toy data with the correct hyper-parameters. Data is shown as red spots, posterior mean prediction is shown as a blue line and two standard deviations are given as dashed blue lines.</center>

</div>
</body>
