function g = mlpKernGradient(kern, x, covGrad)

% MLPKERNGRADIENT Gradient of multi-layer perceptron kernel's parameters.

% IVM

[k, innerProd, arg, denom, numer] = mlpKernCompute(x, kern);
denom2 = denom.*denom;
vec = diag(innerProd);
base = kern.variance./sqrt(1-arg.*arg);
g(1) = sum(sum(((innerProd./(denom) ...
                 -.5*numer./(denom2.*denom)...
                 .*((kern.weightVariance.*vec+kern.biasVariance+1)*vec' ...
                    + vec*(kern.weightVariance.*vec+kern.biasVariance+1)')) ...
                .*base).*covGrad))*kern.weightVariance;

g(2) = sum(sum(((1./denom ...
                 -.5*numer./(denom2.*denom) ...
                 .*(repmat(vec, 1, size(vec, 1))*kern.weightVariance...
                    + 2*kern.biasVariance + 2 ...
                    +repmat(vec', size(vec, 1), 1)*kern.weightVariance))...
                .*base).*covGrad))*kern.biasVariance;
 
g(3) = sum(sum(k.*covGrad));
